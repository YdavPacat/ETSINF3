# This file is generated by gyp; do not edit.

TOOLSET := target
TARGET := libzmq
### Rules for action "prepare-build":
quiet_cmd_binding_gyp_libzmq_target_prepare_build = ACTION binding_gyp_libzmq_target_prepare_build $@
cmd_binding_gyp_libzmq_target_prepare_build = LD_LIBRARY_PATH=$(builddir)/lib.host:$(builddir)/lib.target:$$LD_LIBRARY_PATH; export LD_LIBRARY_PATH; cd $(srcdir)/.; mkdir -p zmq; node "$(builddir)/../../scripts/prepare.js"

zmq/BUILD_SUCCESS: obj := $(abs_obj)
zmq/BUILD_SUCCESS: builddir := $(abs_builddir)
zmq/BUILD_SUCCESS: TOOLSET := $(TOOLSET)
zmq/BUILD_SUCCESS:  FORCE_DO_CMD
	$(call do_cmd,binding_gyp_libzmq_target_prepare_build)

all_deps += zmq/BUILD_SUCCESS
action_binding_gyp_libzmq_target_prepare_build_outputs := zmq/BUILD_SUCCESS


### Rules for final target.
# Build our special outputs first.
$(obj).target/libzmq.stamp: | $(action_binding_gyp_libzmq_target_prepare_build_outputs)

# Preserve order dependency of special output on deps.
$(action_binding_gyp_libzmq_target_prepare_build_outputs): | 

$(obj).target/libzmq.stamp: TOOLSET := $(TOOLSET)
$(obj).target/libzmq.stamp:  FORCE_DO_CMD
	$(call do_cmd,touch)

all_deps += $(obj).target/libzmq.stamp
# Add target alias
.PHONY: libzmq
libzmq: $(obj).target/libzmq.stamp

# Add target alias to "all" target.
.PHONY: all
all: libzmq

